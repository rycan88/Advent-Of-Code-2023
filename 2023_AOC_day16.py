inp = r'''\|.................................../....\\/........................-.....|.|..-.....|\...................../
|-.....|...\........|........................../-...../...--.|..\..........|......./.......-......|......./.-.
.....\..../......-......|.........................-............|..../.....|.......-........../................
........\..|.....|................/.......-\..............\...../....|............\....\......................
-................\....-..........-................./.......//...............|..|...................-..........
...................|..................................|.....|.....-....................../....|..\...\..\.|-..
.......-.............../......\...................................-......../.......-.\|.................../...
......\..................\.............-..........././....|-.....|......................../.-.....|......\....
......-............-..................|..................../......-...|.....................\.................
.........\..........-.......-./...-.../..\...../............................|................/....|...........
.\....../....|...............|..../.......................-...................................-......|..\.....
......................../...|.|........|.........|.....................-............../.-.../.-...............
..|..-.-......|.......\....................-|.......|............-............................................
.........................|.............-..........................-.\\......|.......|........-.........\......
.../....-....\............/...................|........./..\.......\...........||.|......\.......\..-./.......
.../..\.|..-....../.......................-.......-.......|/...........-.......-.......\......................
..\...........-...-.......-.........|\....................../.-...........................\...........-.......
..../.....||.....................-.........................................../............././................
...................-..\................\................................................../.../.........../...
\..................-.-..........//....|......./........-.............../.........\............................
................/...|................../......./..............|.....|..............|..-...........|...........
..../........-......\.|...-................./...................../|.........\................................
...../...................-........|.......................-...\.............................\.../.............
...../....-......................./..........................-............-........\......-.....\.../.\.\.....
..|......-.\..........\........................\........../.........|...|............./............../-.......
./..\-.......|.........|.\/........-........|.|...|..|....\...|.\.....|..|..-...............\.................
..|../..........\................./...\...........|.....................-\..................-..|.........-..-.
........./......||.....................................|..\.-|-................//..|-...|............-.\......
........\..........\..........\......................./......................./......|........-.......|...-...
.........././.....-...-..................-.|..........................-.............-......................./.
.\..........|...........--....................\...-.\.........\......-.................../....|./..\..........
......\.........\.|..||.....|...../........-..........|....|.....|....\..|..........\.........|...............
...........\....-.../......-............/.............-......../.-...................-....|.....-\.......|....
/.....................-.../...............-./....................../|....|.-...|.................\......../...
................../.............|..........\..|..\....|....-...../...-.......\../......\....-...../.||........
./-|.......\..../........../-....../......./...-....-................|............|.................-..../....
.....................\....................|\.-../.......................|.......|.....-........-./..|.........
..........|...\......\......................|./...........--................-..........-.......\...\-..\|.\..\
.......\...-|................\....|......................../............................\..........-.\........
./.......|................\...\........./.........|..................|.....-.......-.....|..|-............-...
...|............/....-.\...........\...../..|..-...../..|.......-........\...-..............-.................
.\-.....................-.........-.\.................|....-.....\....\.\\.//|.........\../.\.........../..-..
......................................|\-........../..-.........-.........................................-|..
........./.../..|.....-............./..\............./............../..............-\.......|....-....-.......
.|............|......-/.-......-......-............-........|...../......\/....\../........|.......|..........
.......|...........\.................-......................\..-...........................|..................
|.........\..\.....-.../.........................-\.................|.........\...............................
....-..........\.....././.............../..........-|...|...../........................-......|....-..........
....................\.|.........\....|..........-.............\..........................|...........\........
.............|.../......|.........../....................../....-..................../......................./
.\...|....-../.............|............-..-.......||..........|............\/..................\...-.........
........\/....-...................../..............-.....................-................................-...
/-..........-......\.....|.....\....\............./..../...........|........-....\...............\.........|..
...../..................\........................./.-...../.....\....-..-\.....\...|................./........
......../......./.......................-.......-..\//...........-|.............../...\.\./..\................
..............................|...................../......\..|.............\\......................./..-.....
....\.....|..............|..................|...|.............|............--.......-..-.................../..
....|.............../.\.............................................|...................../.........\.........
.........\...../.../......\....................................................|.....-.../...\..........\.....
-\............\.......................-...................-..../-........./.................................-.
|.....\.....................\...................|..|..\....../.......\...|......\.............../-.-......|...
.......|.........\.................|..-.............................\............................/............
........................-.-........./..../.|.|.../..............\../....-..........|............../.....\\....
...........\-...........||..........................................\.........|...........-...-...........-\..
..................|................................./.................||.|..........|.....................|.|.
....../.............................|.............................-/..|......./............................../
./................../.|................................-...\.......|..................|............\-..|.....|
\.....|.-...........-|.................../............\................../......................./.......\....
.\.....................\.............|...............-......\...-........-...............-..........|../......
.../..\...|........\\....\............-..|.....|........-/..........|....|.........\..|/...-.....-.\.../.....\
......................../....-................................\..|.........................\..................
..................\....-............\\\/..........|.................|...../..|.............|..................
..|./.......|.....-............|...............|....|............-...\...........................\.\..........
.....|-..\...\.........................|../...................../......\............\.........................
-..-...........-............|......../................./......\.....-...|...............|.....................
........|.......|.......\.|...\...../..\.../......................\.......\...\..................\....-..../..
....-.-./.|...............-.-.............-.............../......./..........|.|../...............|.-.........
...........\..-............../..........-..-../........../.....-/-|.........................-.............\...
............................\.......//.|......../...........|\.....\...........-..-.......-/-.................
..................................\..-..........|./..................../\............./............../........
.....\..........\.......-............/.....................-.|....-......................./.|.................
...............................|.......\........../.............-.....|.......\..\........................-...
......\.........\\............../..-..............\...|..--......-.....\......./................./............
.\.......\.....-...........-......................\........................../......../..../.-./..\........../
.......|.......|........|...\\................./..../..\....\...\...........-.....................\.........-/
....../........................................\..........-..|...............\....................|...-.......
.|.|......./..........\........|......-......-............................|..|..\.........\.......-...........
.....\.\-.-......\.........../.......\\..|..\........\/....\|.............................................\...
.....................-.......................|............................................../.................
..................\...-|............|........................-....../...........||............................
........./............................./.....-....../.-...........-...........................................
.........|...........-.........\......\.............\-.....|...-...|-.../..|.............\.....|....-.........
.....|.....................................|.../........./|...|.|..................\..........................
..\...........-.............|................//.............|........|.........../.\..............\...........
..-\..-............|.\............../../.....||.../......-......|...-/...|..../../...................-/.\.....
.......\.........../.\......\.........\...........-..............\..............|.........-..........-.-......
../...................\|............................../...................|.............../.............-/....
................/\.................|.....................\...|.\....................-.....-...................
......................................................|................................\..\../...|.......|.-./
.........//..|.......\.-...............|............................................................-.|.......
........../.\........\............-./.\....../..//...........\..........|.\.\...|/\...-...\...................
...-................/............../.............................................-../.-........\........../...
...................-...............-.....-............/................./|.-.|...\.\...............-..-......|
\....../.....|......\.........|../.....|......-..../....................-................/...\......\....../..
...../...-.......................\..|\...-...\.|.........|.......|.................\.............-............
...........................\/............................../...........-.......-..../......../......\...-.....
.............................|.-......................-|\...--...............................\..............\.
..............\.|......./..........\..........\/.../......|.....-../......../.....\...|-...........\........./
.............../........\...................../...|......................-...|.|......./.....-................
..-...............--..-...-............-..-\......................-.......|..............|........\.\.....-...'''

'''
def add(tup1, tup2): 
    return (tup1[0] + tup2[0], tup1[1] + tup2[1])

def move(current):
    coord = current[0]
    direction = current[1]
    if D[coord] == ".":
        new = add(coord, direction)
        return [(new, direction)]
    elif D[coord] == "-":
        if direction in ((1, 0), (-1, 0)):
            new = add(coord, direction)
            return [(new, direction)]
        else:
            dir1 = (1, 0)
            dir2 = (-1, 0)
            new1 = add(coord, dir1)
            new2 = add(coord, dir2)
            return [(new1, dir1), (new2, dir2)]
    elif D[coord] == "|":
        if direction in ((0, 1), (0, -1)):
            new = add(coord, direction)
            return [(new, direction)]
        else:
            dir1 = (0, 1)
            dir2 = (0, -1)
            new1 = add(coord, dir1)
            new2 = add(coord, dir2)
            return [(new1, dir1), (new2, dir2)]
    elif D[coord] == "\\":
        if direction == (0, 1):
            new_dir = (1, 0)
        elif direction == (0, -1):
            new_dir = (-1, 0)
        elif direction == (1, 0):
            new_dir = (0, 1)
        elif direction == (-1, 0):
            new_dir = (0, -1)
        new = add(coord, new_dir)
        return [(new, new_dir)]
    elif D[coord] == "/":
        if direction == (0, 1):
            new_dir = (-1, 0)
        elif direction == (0, -1):
            new_dir = (1, 0)
        elif direction == (1, 0):
            new_dir = (0, -1)
        elif direction == (-1, 0):
            new_dir = (0, 1)
        new = add(coord, new_dir)
        return [(new, new_dir)]
    else:
        print("Invalid")


L = inp.split()
D = {}

for y in range(len(L)):
    for x in range(len(L[0])):
        D[(x, y)] = L[y][x]


start = ((0, 0), (1, 0))
Current = [start]

FoundBeams = set([start])
FoundSpots = set([start[0]])
while len(Current) > 0:
    current = Current.pop()
    New = move(current)
    for new in New:
        if new[0] not in D or new in FoundBeams:    
            continue
        FoundBeams.add(new)
        FoundSpots.add(new[0])
        Current.append(new)
print(len(FoundSpots))
'''

def add(tup1, tup2): 
    return (tup1[0] + tup2[0], tup1[1] + tup2[1])

def move(current):
    coord = current[0]
    direction = current[1]
    if D[coord] == ".":
        new = add(coord, direction)
        return [(new, direction)]
    elif D[coord] == "-":
        if direction in ((1, 0), (-1, 0)):
            new = add(coord, direction)
            return [(new, direction)]
        else:
            dir1 = (1, 0)
            dir2 = (-1, 0)
            new1 = add(coord, dir1)
            new2 = add(coord, dir2)
            return [(new1, dir1), (new2, dir2)]
    elif D[coord] == "|":
        if direction in ((0, 1), (0, -1)):
            new = add(coord, direction)
            return [(new, direction)]
        else:
            dir1 = (0, 1)
            dir2 = (0, -1)
            new1 = add(coord, dir1)
            new2 = add(coord, dir2)
            return [(new1, dir1), (new2, dir2)]
    elif D[coord] == "\\":
        if direction == (0, 1):
            new_dir = (1, 0)
        elif direction == (0, -1):
            new_dir = (-1, 0)
        elif direction == (1, 0):
            new_dir = (0, 1)
        elif direction == (-1, 0):
            new_dir = (0, -1)
        new = add(coord, new_dir)
        return [(new, new_dir)]
    elif D[coord] == "/":
        if direction == (0, 1):
            new_dir = (-1, 0)
        elif direction == (0, -1):
            new_dir = (1, 0)
        elif direction == (1, 0):
            new_dir = (0, -1)
        elif direction == (-1, 0):
            new_dir = (0, 1)
        new = add(coord, new_dir)
        return [(new, new_dir)]
    else:
        print("Invalid")

def getNumEnergizedTiles(start):
    Current = [start]

    FoundBeams = set([start])
    FoundSpots = set([start[0]])
    while len(Current) > 0:
        current = Current.pop()
        New = move(current)
        for new in New:
            if new[0] not in D or new in FoundBeams:    
                continue
            FoundBeams.add(new)
            FoundSpots.add(new[0])
            Current.append(new)
    return len(FoundSpots)

import time
t1 = time.time()
L = inp.split()
D = {}

for y in range(len(L)):
    for x in range(len(L[0])):
        D[(x, y)] = L[y][x]


highest = 0

num_row = len(L)
num_col = len(L[0])
Starts = []
for y in range(num_row):
    Starts.append(((0, y), (1, 0)))
    Starts.append(((num_col - 1, y), (-1, 0)))
for x in range(num_col):
    Starts.append(((x, 0), (0, 1)))
    Starts.append(((x, num_row - 1), (0, -1)))

for start in Starts:
    highest = max(highest, getNumEnergizedTiles(start))
print(highest)
print(time.time() - t1)
